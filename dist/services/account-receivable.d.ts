import { AmountTypeResponse, BatchTypeMappingsResponse, CheckDuplicateRequestBody, FileFormatMappingsRequestBody, FileFormatMappingsResponse, MakerConfirmationRequestBody, MandateCategoryMappingsResponse, BatchFileUploadCheckDuplicateResponse, MandateFileUploadRequestBody, BatchFileUploadResponse, MandateTypeMappingsResponse, StatusesMappingsResponse, TransactionFrequencyMappingsResponse, MandateManagementDataRequestBody, MandateManagementDataResponse, MandateManagementCreateRequestBody, MandateManagementCreateResponse, MandateManagementCheckDuplicateRequestBody, MandateManagementCheckDuplicateResponse, MandateManagementCreateOverrideRequestBody, MandateManagementCreateOverrideResponse, MandateManagementDataDetailRequestBody, MandateManagementDetailResponse, MandateManagementUpdateDataRequestBody, MandateManagementUpdateDataResponse, ActionTypeMappingsResponse, ProductMappingsResponse, TransactionMappingsResponse, ReceivableActionDataRequestBody, MandateCodeMappingsResponse, MandateCodeMappingParams, DirectDebitCreateRequestBody, DirectDebitCreateResponse, DirectDebitCheckDuplicateRequestBody, DirectDebitCheckDuplicateResponse, UploadDirectDebitRequestBody, FileTypeMappingsResponse, ReportTypeMappingsResponse, ReceivableReportsRequestBody, ReceivableInquiryData, ReceivableInquiryDataRequestBody, ReceivableInquiryDataDetailRequestBody, ReceivableInquiryDataDetailResponse, ReceivableInquiryBatchDetailRejectionRequestBody, ReceivableOverviewOverviewResponse, ReceivableOverviewSummaryRequestBody, ReceivableOverviewSummaryResponse, ReceivableOverviewSummaryRangeMappingsResponse, ReceivableOverviewTransactionInProgressRequestBody, ReceivableOverviewTransactionInProgressResponse, ReceivableOverviewRejectionMandateDetailsData, ReceivableOverviewRejectionMandateDetailsResponse, ReceivableOverviewHistoryRequestBody, ReceivableOverviewHistoryResponse, MakerConfirmationDataExportRequestBody, ReceivableActionDataExportRequestBody, ReceivableInquiryDataExportRequestBody, ReceivableInquiryBatchDetailExportRequestBody, ReceivableInquiryBatchRejectionDetailExportRequestBody, MandateManagementDataExportRequestBody, ReceivableInquiryDataTransactionDetailRequestBody, ReceivableInquiryTransactionDataDetailResponse, CounterPartyValidationFileUploadRequestBody, UploadFileCounterPartyValidationResponse, CounterPartyValidationDataRequestBody, CounterPartyValidationDataResponse, CounterPartyValidationDataExportRequestBody, CounterPartyValidationBatchDetailExportRequestBody, AccountStatusMappingsResponse, CounterPartyValidationBatchDetailRequestBody, CounterPartyValidationBatchDetailDataResponse, ReceivableApproveRequestBody, ReceivableBatchDataDetailRequestBody, ReceivableBatchDataRejectionDetailResponse, ReceivableExportBatchDataRejectionDetailRequestBody, ReceivableExportBatchDataDetailRequestBody, ReceivableActionResponse, ReceivableBatchDataResponse, ReceivableBatchDataDetailResponse, ReceivableBatchDataRejectionDetailRequestBody, ReceivableReportsGenerateRequestBody, ReceivableReportsGetDataRequestBody, ReceivableReportsGetListResponse, ReceivableReportsDownloadBatchRequestBody } from "@/types";
import { AxiosResponse } from "axios";
declare const AccountReceivableService: () => {
    postUploadMandateFile: (body: MandateFileUploadRequestBody) => Promise<BatchFileUploadResponse>;
    downloadTemplateByID: (templateID: string) => Promise<AxiosResponse<any, any>>;
    checkDuplicateFile: (payload: CheckDuplicateRequestBody) => Promise<BatchFileUploadCheckDuplicateResponse>;
    getListTemplate: (companyID: any) => Promise<any>;
    getFileFormatMappings: (body: FileFormatMappingsRequestBody) => Promise<FileFormatMappingsResponse>;
    getFileTypeMappings: () => Promise<FileTypeMappingsResponse>;
    getMandateTypeMappings: () => Promise<MandateTypeMappingsResponse>;
    getMandateCategoryMappings: () => Promise<MandateCategoryMappingsResponse>;
    getStatusMappings: () => Promise<StatusesMappingsResponse>;
    getAmountTypeMappings: () => Promise<AmountTypeResponse>;
    getTransactionFrequencyMappings: () => Promise<TransactionFrequencyMappingsResponse>;
    getBatchTypeMappings: () => Promise<BatchTypeMappingsResponse>;
    getMakerConfirmationData: (body: MakerConfirmationRequestBody) => Promise<ReceivableBatchDataResponse>;
    postMakerConfirmationAction: (body: ReceivableApproveRequestBody) => Promise<ReceivableActionResponse>;
    getMandateManagementData: (body: MandateManagementDataRequestBody) => Promise<MandateManagementDataResponse>;
    createMandateManagementData: (body: MandateManagementCreateRequestBody) => Promise<MandateManagementCreateResponse>;
    checkDuplicateMandateManagementData: (body: MandateManagementCheckDuplicateRequestBody) => Promise<MandateManagementCheckDuplicateResponse>;
    postCreateOverride: (body: MandateManagementCreateOverrideRequestBody) => Promise<MandateManagementCreateOverrideResponse>;
    getMakerConfirmationDetailData: (body: ReceivableBatchDataDetailRequestBody) => Promise<ReceivableBatchDataDetailResponse>;
    getMakerConfirmationBatchRejectionDetailData: (body: ReceivableBatchDataRejectionDetailResponse) => Promise<ReceivableBatchDataRejectionDetailResponse>;
    getMandateDetailData: (body: MandateManagementDataDetailRequestBody) => Promise<MandateManagementDetailResponse>;
    updateMandateManagementData: (body: MandateManagementUpdateDataRequestBody) => Promise<MandateManagementUpdateDataResponse>;
    getActionTypeMappings: () => Promise<ActionTypeMappingsResponse>;
    getProductMappings: () => Promise<ProductMappingsResponse>;
    getReportTypeMappings: () => Promise<ReportTypeMappingsResponse>;
    getTransactionTypeMappings: () => Promise<TransactionMappingsResponse>;
    downloadReceivableReport: (body: ReceivableReportsRequestBody) => Promise<AxiosResponse<any, any>>;
    generateReceivableReport: (body: ReceivableReportsGenerateRequestBody) => Promise<AxiosResponse<any, any>>;
    getDataReceivableReportsList: (body: ReceivableReportsGetDataRequestBody) => Promise<ReceivableReportsGetListResponse>;
    downloadBatchReceivableReport: (body: ReceivableReportsDownloadBatchRequestBody) => Promise<undefined>;
    getReceivableActionData: (body: ReceivableActionDataRequestBody) => Promise<ReceivableBatchDataResponse>;
    postReceivableActionAction: (body: ReceivableApproveRequestBody) => Promise<ReceivableActionResponse>;
    getReceivableActionDetailData: (body: ReceivableBatchDataDetailRequestBody) => Promise<ReceivableBatchDataDetailResponse>;
    getReceivableActionBatchRejectionDetailData: (body: ReceivableBatchDataRejectionDetailRequestBody) => Promise<ReceivableBatchDataRejectionDetailResponse>;
    getReceivableInquiryData: (body: ReceivableInquiryDataRequestBody) => Promise<ReceivableInquiryData>;
    getReceivableInquiryDetailData: (body: ReceivableInquiryDataDetailRequestBody) => Promise<ReceivableInquiryDataDetailResponse>;
    getReceivableInquiryBatchRejectionDetailData: (body: ReceivableInquiryBatchDetailRejectionRequestBody) => Promise<ReceivableBatchDataRejectionDetailResponse>;
    getReceivableInquiryTransactionDataDetail: (body: ReceivableInquiryDataTransactionDetailRequestBody) => Promise<ReceivableInquiryTransactionDataDetailResponse>;
    getMandateCodeMappings: (params: MandateCodeMappingParams) => Promise<MandateCodeMappingsResponse>;
    createDirectDebitData: (body: DirectDebitCreateRequestBody) => Promise<DirectDebitCreateResponse>;
    checkDuplicateDirectDebitData: (body: DirectDebitCheckDuplicateRequestBody) => Promise<DirectDebitCheckDuplicateResponse>;
    postUploadDirectDebit: (body: UploadDirectDebitRequestBody) => Promise<BatchFileUploadResponse>;
    getReceivableOverviewData: () => Promise<ReceivableOverviewOverviewResponse>;
    getReceivableOverviewSummaryData: ({ processId, dateRangeId, }: ReceivableOverviewSummaryRequestBody) => Promise<ReceivableOverviewSummaryResponse>;
    getReceivableOverviewSummaryRangeMappings: () => Promise<ReceivableOverviewSummaryRangeMappingsResponse>;
    getReceivableOverviewTransactionInProgressData: (body: ReceivableOverviewTransactionInProgressRequestBody) => Promise<ReceivableOverviewTransactionInProgressResponse>;
    getReceivableOverviewRejectionMandateDetailsData: (body: ReceivableOverviewRejectionMandateDetailsData) => Promise<ReceivableOverviewRejectionMandateDetailsResponse>;
    getReceivableOverviewHistoryData: ({ processId, month, }: ReceivableOverviewHistoryRequestBody) => Promise<ReceivableOverviewHistoryResponse>;
    exportMakerConfirmationData: (body: MakerConfirmationDataExportRequestBody) => Promise<undefined>;
    exportMakerConfirmationDetailData: (body: ReceivableExportBatchDataDetailRequestBody) => Promise<undefined>;
    exportMakerConfirmationBatchRejectionDetailData: (body: ReceivableExportBatchDataRejectionDetailRequestBody) => Promise<undefined>;
    exportReceivableActionData: (body: ReceivableActionDataExportRequestBody) => Promise<undefined>;
    exportReceivableActionDetailData: (body: ReceivableExportBatchDataDetailRequestBody) => Promise<undefined>;
    exportReceivableActionBatchRejectionDetailData: (body: ReceivableExportBatchDataRejectionDetailRequestBody) => Promise<undefined>;
    exportReceivableInquiryData: (body: ReceivableInquiryDataExportRequestBody) => Promise<undefined>;
    exportReceivableInquiryDetailData: (body: ReceivableInquiryBatchDetailExportRequestBody) => Promise<undefined>;
    exportReceivableInquiryBatchRejectionDetailData: (body: ReceivableInquiryBatchRejectionDetailExportRequestBody) => Promise<undefined>;
    exportMandateManagementData: (body: MandateManagementDataExportRequestBody) => Promise<undefined>;
    postUploadCounterPartyValidation: (body: CounterPartyValidationFileUploadRequestBody) => Promise<UploadFileCounterPartyValidationResponse>;
    getCounterPartyValidationData: (body: CounterPartyValidationDataRequestBody) => Promise<CounterPartyValidationDataResponse>;
    exportCounterPartyValidationData: (body: CounterPartyValidationDataExportRequestBody) => Promise<undefined>;
    exportCounterPartyValidationDetailData: (body: CounterPartyValidationBatchDetailExportRequestBody) => Promise<undefined>;
    getAccountStatusMappings: () => Promise<AccountStatusMappingsResponse>;
    getCounterPartyValidationDetailData: (body: CounterPartyValidationBatchDetailRequestBody) => Promise<CounterPartyValidationBatchDetailDataResponse>;
};
export default AccountReceivableService;
