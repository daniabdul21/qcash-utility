import { QueryParams } from "./app";
export interface AccountsParams extends QueryParams {
    "account.accountID": string;
    "account.companyID": string;
    "account.accountNumber": string;
    "account.accountAlias": string;
    "account.accountName": string;
    "account.accountType": string;
    "account.accountStatus": string;
    "account.accountCurrency": string;
    "account.accessLevel": string;
    "account.isOwnedByCompany": string;
    "account.createdByID": string;
    "account.updatedByID": string;
    "account.deletedByID": string;
    "account.disabled": string;
    "account.cif": string;
    "account.productCode": string;
    "account.statusCode": string;
    "account.createdAt": string;
    "account.updatedAt": string;
    "account.deletedAt": string;
    in: string;
    productID: string;
}
export interface Accounts {
    accountID: string;
    companyID: string;
    accountNumber: string;
    accountAlias: string;
    accountName: string;
    accountType: string;
    accountStatus: string;
    accountCurrency: string;
    accessLevel: string;
    isOwnedByCompany: boolean;
    createdByID: string;
    updatedByID: string;
    deletedByID: string;
    disabled: boolean;
    cif: string;
    productCode: string;
    statusCode: string;
    createdAt: Date;
    updatedAt: Date;
    deletedAt: null;
    label: string;
    value: string;
}
export interface CompanyAccountStatement {
    accountNumberCompany: string;
    admin: null | string;
    channel: string;
    company: {
        accountNumber: string;
        address: string;
        branchID: string;
        businessEntity: string;
        channel: string;
        cifCompany: string;
        city: string;
        companyGroupLimits: any[];
        companyID: string;
        companyLimits: any[];
        companyLoginCode: string;
        companyName: string;
        companyStatus: string;
        companyType: string;
        countryCode: string;
        countryName: string;
        createdAt: string;
        createdByID: string;
        createdByName: string;
        districtCompany: string;
        faxNumber: string;
        groupName: string;
        holdingCompanyName: string;
        holdingID: string;
        phoneNumber: string;
        province: string;
        registrationID: string;
        relationshipManager: string;
        subsidiaryCompanies: any[];
        taskID: string;
        taxID: string;
        updatedAt: string;
        updatedByID: string;
        updatedByName: string;
        userLimit: number;
        zipCode: string;
    };
    isManual: boolean;
    oldData: null | any;
    task: {
        approvedAt: string;
        comment: string;
        createdAt: string;
        createdByID: string;
        createdByName: string;
        featureID: string;
        isValidFeatureID: boolean;
        lastApprovedByID: string;
        lastApprovedByName: string;
        lastRejectedByID: string;
        lastRejectedByName: string;
        reasons: string;
        rejectedAt: string | null;
        status: string;
        step: string;
        taskID: string;
        type: string;
        updatedAt: string;
        updatedByID: string;
        updatedByName: string;
    };
    usersLimit: number;
    workflow: null | any;
}
export type FormUploadAccount = {
    companyId: string;
    companyName: string;
    file: File[] | null;
    uploadKey: string;
    fileDescription: string;
};
export interface SubmitFileRequestBody {
    file: string;
    companyId: string;
    companyName: string;
    uploadKey: string;
    fileDescription: string;
}
export type saveTaskPayload = {
    batchId: string;
    companyId: string;
    action: string;
    reason: string;
    remark: string;
};
